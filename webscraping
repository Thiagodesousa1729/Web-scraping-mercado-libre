
from selenium import webdriver
from selenium.webdriver.common.keys import Keys 
import pandas as pd 
import time 


driver = webdriver.Chrome("./chromedriver")
driver.get("https://www.mercadolibre.com.ar/")

search_bar = driver.find_element_by_class_name("nav-search-input")
search_bar.clear()
search_bar.send_keys("placa de video")
search_bar.send_keys(Keys.RETURN)
pagination = driver.find_element_by_xpath("//li[@class='andes-pagination__page-count']").text
#Esto de la pagination es para obtener el numero de paginas que se van a recorrer 
pagination = [ int(s) for s in pagination.split() if s.isdigit()][0]
records = []
for _product in range(1,pagination+1):
    #next_page_button se usa para buscar a traves del css  "Siguiente pagina"
    if _product != pagination:
        next_page_button = driver.find_element_by_css_selector("a[title='Siguiente']")   
        
    title_products = driver.find_elements_by_xpath("//h2[@class='ui-search-item__title ui-search-item__group__element']")
    title_products = [    title.text for title in title_products    ]

    price_products = driver.find_elements_by_xpath("//li[@class='ui-search-layout__item']//div[@class='ui-search-result__content-wrapper']//div[@class='ui-search-item__group ui-search-item__group--price']//div[1]/div[1]//div[1]//span[@class='price-tag-amount']//span[2]")
    price_products = [    price.text for price in price_products   ]

    link_products = driver.find_elements_by_xpath("//div[@class='ui-search-result__image']//a[1]")
    link_products = [    link.get_attribute("href") for link in link_products    ]


    data_products = {
        "name_product":title_products,
        "price_product":price_products,
        "link_product":link_products
        }
    df =  pd.DataFrame(data_products)

    # Records se usa para ir uniendo las listas desde la pagina 1 y no se pierda la info
    records.append(df)

    # EJECUTAR BOTON DE SIGUIENTE A TRAVES DEL CSS YA LLAMADO MAS ARRIBA

    if _product != pagination:
        driver.execute_script("arguments[0].click()", next_page_button)
        
# SIRVE PARA UNIR VARIOS DATAFRAME
df = pd.concat(records)

df.to_csv("PRODUCTOS.csv")
time.sleep(4)
driver.close()

